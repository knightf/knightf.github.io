<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redux on 韩飞的博客</title>
    <link>https://knightf.coding.me/tags/redux/index.xml</link>
    <description>Recent content in Redux on 韩飞的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <atom:link href="https://knightf.coding.me/tags/redux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>一个连接React和Redux的注意事项</title>
      <link>https://knightf.coding.me/post/react-redux-shallowe-qual/</link>
      <pubDate>Tue, 21 Jun 2016 11:43:06 +0800</pubDate>
      
      <guid>https://knightf.coding.me/post/react-redux-shallowe-qual/</guid>
      <description>&lt;p&gt;用 &lt;code&gt;react-redux&lt;/code&gt; 连接 &lt;code&gt;React&lt;/code&gt; 和 &lt;code&gt;Redux&lt;/code&gt; 的时候，需要 &lt;code&gt;mapStateToProps&lt;/code&gt; 这个函数来把 &lt;code&gt;store&lt;/code&gt; 里面的内容映射到组建的 &lt;code&gt;props&lt;/code&gt; 里面。这个 &lt;code&gt;mapStateToProps&lt;/code&gt; 函数并不会总是把值赋给组件，它会执行一个 &lt;a href=&#34;https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js&#34;&gt;&lt;code&gt;shallowEqual&lt;/code&gt;&lt;/a&gt; 函数，而这个函数就像它的名字一样忠诚的履行着“浅浅”的比较。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;export default function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true
  }

  const keysA = Object.keys(objA)
  const keysB = Object.keys(objB)

  if (keysA.length !== keysB.length) {
    return false
  }

  // Test for A&#39;s keys different from B.
  const hasOwn = Object.prototype.hasOwnProperty
  for (let i = 0; i &amp;lt; keysA.length; i++) {
    if (!hasOwn.call(objB, keysA[i]) ||
        objA[keysA[i]] !== objB[keysA[i]]) {
      return false
    }
  }

  return true
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的引用一样，返回 &lt;code&gt;true&lt;/code&gt; 。&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的所有键的列表长度不一样，返回 &lt;code&gt;false&lt;/code&gt; 。&lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 所有值的引用一样，所有键也都是自己的属性，那么就返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;如果你在 &lt;code&gt;redux&lt;/code&gt; 里面的改动是在比较深的地方，那么很有可能 &lt;code&gt;react-redux&lt;/code&gt; 在帮你绑定的时候，就把这个改动给忽视了，因为它只做浅层的比较。&lt;/p&gt;

&lt;p&gt;所以在写 &lt;code&gt;reducer&lt;/code&gt; 的时候，记得要改变引用的地址，让它可以成功更新属性，触发 &lt;code&gt;render&lt;/code&gt; 。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>